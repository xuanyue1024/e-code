<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ecode.mapper.ClassMapper">
    <select id="pageQueryByName" resultType="com.ecode.vo.ClassVO">
        SELECT u.`name` AS teacherName, c.*
        FROM class c
                 LEFT JOIN `user` u ON c.teacher_id = u.id
                 LEFT JOIN student_class sc ON c.id = sc.class_id
        <where>
            <if test="name != null">
                c.`name` LIKE concat('%',#{name},'%')
            </if>
            <if test="teacherId != null">
                AND c.teacher_id = ${teacherId}
            </if>
            <if test="studentId != null">
                AND sc.student_id = ${studentId}
            </if>
        </where>
        GROUP BY c.id, u.`name`
        <if test="order != null">
            ORDER BY join_number
            <if test="!isAsc">
                DESC
            </if>
        </if>
        <if test="order == null">
            ORDER BY update_time
        </if>
    </select>


    <!--班级题目提交情况统计-->
    <select id="selectClassProblemSubmissionsByClassId" resultType="com.ecode.vo.ClassProblemSubmissionsVO">
        SELECT
            u.name as studentName,
            SUM(cs.submit_number) as totalSubmissions,
            SUM(cs.pass_number) as totalPasses,
            ROUND(SUM(cs.pass_number) * 100.0 / NULLIF(SUM(cs.submit_number), 0), 2) as passRate
        FROM user u
        JOIN student_class sc ON u.id = sc.student_id
        LEFT JOIN class_score cs ON sc.id = cs.sc_id
        WHERE u.role = 'student'
        AND sc.class_id = #{classId}
        GROUP BY u.id, u.name
        ORDER BY passRate DESC
    </select>

    <!-- 班级学生成绩排名统计 -->
    <select id="selectClassStudentRank" resultType="com.ecode.vo.ClassStudentRankVO">
        SELECT
            u.id AS student_id,
            u.name AS student_name,
            COUNT(DISTINCT cs.class_problem_id) AS attempted_problems,
            SUM(cs.submit_number) AS total_submissions,
            SUM(cs.pass_number) AS passed_submissions,
            ROUND(SUM(cs.score) / COUNT(DISTINCT cs.class_problem_id), 2) AS avg_score,
            ROUND(SUM(cs.pass_number) / SUM(cs.submit_number) * 100, 2) AS pass_rate_percentage,
            MAX(cs.code_submission->>'$.language') AS last_used_language
        FROM
            user u
        JOIN
            student_class sc ON u.id = sc.student_id
        LEFT JOIN
            class_score cs ON sc.id = cs.sc_id
        WHERE
            sc.class_id = #{classId}
        GROUP BY
            u.id, u.name
        ORDER BY
            avg_score DESC
    </select>

    <!-- 班级学生完成不同难度题目分布统计 -->
    <select id="selectClassStudentDifficulty" resultType="com.ecode.vo.ClassDifficultyDistributionVO">
        SELECT
            u.name AS student_name,
            SUM(CASE WHEN p.grade = 0 THEN cs.pass_number ELSE 0 END) AS easy_passed,
            SUM(CASE WHEN p.grade = 1 THEN cs.pass_number ELSE 0 END) AS medium_passed,
            SUM(CASE WHEN p.grade = 2 THEN cs.pass_number ELSE 0 END) AS hard_passed,
            SUM(CASE WHEN p.grade = 0 THEN 1 ELSE 0 END) AS easy_total,
            SUM(CASE WHEN p.grade = 1 THEN 1 ELSE 0 END) AS medium_total,
            SUM(CASE WHEN p.grade = 2 THEN 1 ELSE 0 END) AS hard_total
        FROM
            user u
        JOIN
            student_class sc ON u.id = sc.student_id
        JOIN
            class_score cs ON sc.id = cs.sc_id
        JOIN
            class_problem cp ON cs.class_problem_id = cp.id
        JOIN
            problem p ON cp.problem_id = p.id
        WHERE
            sc.class_id = #{classId}
        GROUP BY
            u.id, u.name
        ORDER BY
            (easy_passed + medium_passed + hard_passed) DESC
    </select>

    <!-- 班级题目通过率排行榜 -->
    <select id="selectClassProblemPassRate" resultType="com.ecode.vo.ClassProblemPassRateVO">
        SELECT
            p.title AS problem_title,
            p.grade AS difficulty,
            COUNT(DISTINCT sc.student_id) AS attempted_students,
            ROUND(
                    CASE
                        WHEN SUM(cs.submit_number) = 0 THEN 0
                        ELSE SUM(cs.pass_number) * 100.0 / SUM(cs.submit_number)
                        END, 2
            ) AS pass_rate,
            SUM(cs.submit_number) AS total_submissions
        FROM
            problem p
                JOIN
            class_problem cp ON p.id = cp.problem_id
                JOIN
            class_score cs ON cp.id = cs.class_problem_id
                JOIN
            student_class sc ON cs.sc_id = sc.id
        WHERE
            sc.class_id = #{classId}
        GROUP BY
            p.id, p.title, p.grade
        ORDER BY
            pass_rate desc
#         LIMIT 10
    </select>

    <select id="getDifficultyNum" resultType="com.ecode.vo.ClassProblemDifficultyNumVO">
        WITH difficulty_levels AS (
            SELECT 0 AS grade, '简单' AS level_name
            UNION SELECT 1, '一般'
            UNION SELECT 2, '困难'
        )
        SELECT
            dl.level_name AS difficulty,
            COUNT(p.id) AS problem_num
        FROM
            difficulty_levels dl
                LEFT JOIN (
                SELECT p.grade, p.id
                FROM class_problem cp
                         JOIN problem p ON cp.problem_id = p.id
                WHERE cp.class_id = #{classId}
            ) p ON dl.grade = p.grade
        GROUP BY
            dl.grade, dl.level_name
        ORDER BY
            dl.grade;
    </select>
    <select id="getClassProblemTagNum" resultType="com.ecode.vo.ClassProblemTagNumVO">
        SELECT
            t.name AS tag_name,
            COUNT(DISTINCT cp.problem_id) AS problem_count
        FROM
            class_problem cp
                JOIN
            problem_tag pt ON cp.problem_id = pt.problem_id
                JOIN
            tag t ON pt.tag_id = t.id
        WHERE
            cp.class_id = #{classId}
        GROUP BY
            t.id, t.name
        ORDER BY
            problem_count DESC, t.name;
    </select>
</mapper>