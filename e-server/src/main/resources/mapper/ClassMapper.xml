<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ecode.mapper.ClassMapper">
    <select id="pageQueryByName" resultType="com.ecode.vo.ClassVO">
        SELECT u.`name` AS teacherName, c.*
        FROM class c
                 LEFT JOIN `user` u ON c.teacher_id = u.id
                 LEFT JOIN student_class sc ON c.id = sc.class_id
        <where>
            <if test="name != null">
                c.`name` LIKE concat('%',#{name},'%')
            </if>
            <if test="teacherId != null">
                AND c.teacher_id = ${teacherId}
            </if>
            <if test="studentId != null">
                AND sc.student_id = ${studentId}
            </if>
        </where>
        GROUP BY c.id, u.`name`
        <if test="order != null">
            ORDER BY join_number
            <if test="!isAsc">
                DESC
            </if>
        </if>
        <if test="order == null">
            ORDER BY update_time
        </if>
    </select>


    <!--班级题目提交情况统计-->
    <select id="selectClassProblemSubmissionsByClassId" resultType="com.ecode.vo.ClassProblemSubmissionsVO">
        SELECT
            u.name as studentName,
            SUM(cs.submit_number) as totalSubmissions,
            SUM(cs.pass_number) as totalPasses,
            ROUND(SUM(cs.pass_number) * 100.0 / NULLIF(SUM(cs.submit_number), 0), 2) as passRate
        FROM user u
        JOIN student_class sc ON u.id = sc.student_id
        LEFT JOIN class_score cs ON sc.id = cs.sc_id
        WHERE u.role = 'student'
        AND sc.class_id = #{classId}
        GROUP BY u.id, u.name
        ORDER BY passRate DESC
    </select>

    <!--班级学生成绩排名-->
    <select id="selectClassStudentRank" resultType="com.ecode.vo.ClassStudentRankVO">
        SELECT 
            u.id as studentId,
            u.name as studentName,
            COUNT(DISTINCT cs.class_problem_id) as attemptedProblems,
            SUM(cs.submit_number) as totalSubmissions,
            SUM(cs.pass_number) as totalPasses,
            ROUND(AVG(cs.score), 2) as averageScore,
            ROUND(SUM(cs.pass_number) * 100.0 / NULLIF(SUM(cs.submit_number), 0), 2) as passRate,
            MAX(cs.code_submission) as lastUsedLanguage
        FROM user u
        JOIN student_class sc ON u.id = sc.student_id
        LEFT JOIN class_score cs ON sc.id = cs.sc_id
        WHERE u.role = 'student'
        AND sc.class_id = #{classId}
        GROUP BY u.id, u.name
        ORDER BY averageScore DESC
    </select>
    <!--班级学生完成不同难度题目的分布-->
    <select id="selectClassDifficultyDistribution" resultType="com.ecode.vo.ClassDifficultyDistributionVO">
        SELECT 
            u.name AS student_name, 
            SUM(CASE WHEN p.grade = 0 THEN cs.pass_number ELSE 0 END) AS easy_passed, 
            SUM(CASE WHEN p.grade = 1 THEN cs.pass_number ELSE 0 END) AS medium_passed, 
            SUM(CASE WHEN p.grade = 2 THEN cs.pass_number ELSE 0 END) AS hard_passed, 
            SUM(CASE WHEN p.grade = 0 THEN 1 ELSE 0 END) AS easy_total, 
            SUM(CASE WHEN p.grade = 1 THEN 1 ELSE 0 END) AS medium_total, 
            SUM(CASE WHEN p.grade = 2 THEN 1 ELSE 0 END) AS hard_total 
        FROM 
            user u 
        JOIN 
            student_class sc ON u.id = sc.student_id 
        JOIN 
            class_score cs ON sc.id = cs.sc_id 
        JOIN 
            class_problem cp ON cs.class_problem_id = cp.id 
        JOIN 
            problem p ON cp.problem_id = p.id 
        WHERE 
            sc.class_id = #{classId} 
        GROUP BY 
            u.id, u.name 
        ORDER BY 
            (easy_passed + medium_passed + hard_passed) DESC
    </select>
</mapper>
